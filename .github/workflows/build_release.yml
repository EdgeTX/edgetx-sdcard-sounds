name: Generate release zips

on:
  workflow_dispatch:
  push:
    tags:
      - v*
  # push:
  #   branches: [ main ]
  #   paths-ignore:
  #     - '**.md'
  # pull_request:
  #   paths-ignore:
  #     - '**.md'

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install --yes --no-install-recommends ffmpeg

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install Python dependencies
        run: uv sync

      - name: Run build checks
        run: uv run ./build-checks.py

      - name: Set VERSION if tagged build
        if: startsWith(github.event.ref, 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build the release zip packages
        if: github.event_name != 'pull_request'
        run: ./release.sh

      - name: Auto Release to Latest
        uses: crowbarmaster/GH-Automatic-Releases@latest
        if: github.event_name != 'pull_request'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: "Latest"
          automatic_release_tag: "latest"
          prerelease: true
          files: |
            release/edgetx-sdcard-sounds-*.zip
            sounds.json

      - name: Auto Create Draft Release
        uses: crowbarmaster/GH-Automatic-Releases@latest
        if: ${{ startsWith(github.event.ref, 'refs/tags/v') && github.event_name != 'pull_request' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: true
          prerelease: false
          files: |
            release/edgetx-sdcard-sounds-*.zip
            sounds.json
